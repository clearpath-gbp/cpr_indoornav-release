#!/usr/bin/env python
"""
This script creates the indoornav systemd job, which will be automatically triggered after the base ros
job completes.
To give the backpack PC time to boot we add a 15s delay to the startup. This may be insufficient; testing needed!
"""

import argparse
import getpass
import os
import robot_upstart
import sys

from catkin.find_in_workspaces import find_in_workspaces

parser = argparse.ArgumentParser()
parser.add_argument('platform', metavar='PLATFORM', type=str, action='store', help='The supported Clearpath base platform. One of: dingo, husky, jackal, ridgeback')
parser.add_argument('-a','--ip-address', metavar='IP_ADDR', type=str, action='store', dest='ip_address', help='IP address of the IndoorNav backpack. Default: 192.168.131.9', default='192.168.131.9')
parser.add_argument('-u','--username', metavar='USER', type=str, action='store', dest='username', help='Login name for the IndoorNav backpack. Default: administrator', default='administrator')
args = parser.parse_args()

if getpass.getuser() == 'root':
    print("ERROR: This script cannot be run as root")
    sys.exit(1)

platform = args.platform
backpack_ip = args.ip_address
remote_user = args.username
local_user = getpass.getuser()
jobname = 'cpr-indoornav'

pkg_name = 'cpr_indoornav'
launch_files = [
    '{0}_indoornav.launch'.format(platform)
]

j = robot_upstart.Job(name=jobname, workspace_setup=os.environ['ROBOT_SETUP'])
j.symlink = True
j.roslaunch_wait = True

for lf in launch_files:
    j.add(package=pkg_name, filename='launch/{0}'.format(lf))

j.install()

os.system("sudo sed -i '/After/c After=ros.service' /lib/systemd/system/%s.service" % jobname)
os.system("sudo sed -i '/After/a PartOf=ros.service' /lib/systemd/system/%s.service" % jobname)
os.system("sudo sed -i '/^\[Service\]/a TimeoutStartSec=120' /lib/systemd/system/%s.service" % jobname)
os.system("sudo sed -i '/^\[Service\]/a ExecStartPre=/usr/sbin/cpr-indoornav-wait' /lib/systemd/system/%s.service" % jobname)

os.system('''sudo bash -c "cat > /usr/sbin/cpr-indoornav-wait" << 'EOL'
#!/bin/bash

while true;
do
  # SSH credentials are assumed to already be configured, as otherwise we cannot start the remote ROS nodes
  # note that we must run this as the administrator user, not as root!
  echo "[ROS ] Waiting for {backpack_ip} to come up..."
  REMOTE_HOSTNAME=$(sudo -u {local_user} ssh {remote_user}@{backpack_ip} -oHostKeyAlgorithms='ssh-rsa' 'hostname')
  if [ -z "$REMOTE_HOSTNAME" ];
  then
    # wait 5s and try again
    echo -n "."
    sleep 5
  else
    echo "[ROS ] Successfully logged into $REMOTE_HOSTNAME as {remote_user}; can now launch indoornav"
    break
  fi
done
EOL'''.format(
  backpack_ip=backpack_ip,
  remote_user=remote_user,
  local_user=local_user
))
os.system("sudo chmod +x /usr/sbin/cpr-indoornav-wait")
