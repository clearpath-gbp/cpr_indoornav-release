#!/bin/bash
# This script is normally installed from the clearpath_iso during installation when the
# indoornav-backpack option is selected on a supported platform.
# It is intended to be run on the base-platform PC after ROS has been installed & configured
# to finish setting up the required communication between the base platform and the backpack
# Generally you should use the version included in the clearpath_iso, but if you missed
# enabling that, or are retrofitting a robot, this script may be useful

prompt_yesNO() {
  # as the user a y/N question
  # $1 is the variable into which the answer is saved as either "n" or "y"
  # $2 is the question to ask

  local __resultvar=$1
  local __prompt=$2

  echo -e "\e[39m$__prompt\e[0m"
  echo "y/N: "

  if [[ $AUTO_YES == 1 ]];
  then
    echo "Automatically answering No"
    eval $__resultvar="n"
  else
    read answer
    if [[ $answer =~ ^[y,Y].* ]];
    then
      eval $__resultvar="y"
    else
      eval $__resultvar="n"
    fi
  fi
}

RUN_ME="n"
prompt_yesNO RUN_ME "\e[94mIs the IndoorNav backpack PC configured, connected, and powered-on?\e[0m"

if [ $RUN_ME = "y" ];
then
  # generate an SSH key that doesn't use a passphrase
  echo "[INFO] Generating passwordless SSH key for use during IndoorNav bringup"
  mkdir -p /home/administrator/.ssh
  chmod 700 /home/administrator/.ssh
  ssh-keygen -b 2048 -t rsa -f /home/administrator/.ssh/id_rsa -q -N "" -m PEM
  echo "[INFO] Saving SSH credentials for backpack at 192.168.131.9"
  REMOTE_HOSTNAME=$(ssh administrator@192.168.131.9 -oHostKeyAlgorithms='ssh-rsa' 'hostname')
  echo "[INFO] Determined backpack's hostname is $REMOTE_HOSTNAME"

  # side-quest to make sure $REMOTE_HOSTNAME is in /etc/hosts
  # match {ip address}{whitespace}{hostname}{whitespace or eol}
  # if the entry doesn't exist in /etc/hosts then append it
  HOSTS_ENTRY=$(cat /etc/hosts | grep -e "^${REMOTE_HOST}\\s\+${REMOTE_HOSTNAME}\\s*$")
  if [ -z "$HOSTS_ENTRY" ];
  then
    echo "[INFO] Adding entry to resolve $REMOTE_HOST to $REMOTE_HOSTNAME to /etc/hosts"
    sudo bash -c 'cat >> /etc/hosts' <<EOF

# IndoorNav Backpack PC
$REMOTE_HOST      $REMOTE_HOSTNAME
EOF
  fi

  # resume SSH credentials
  echo "[INFO] Saving SSH credentials for $REMOTE_HOSTNAME"
  ssh administrator@$REMOTE_HOST -oHostKeyAlgorithms='ssh-rsa' 'echo "SSH Credentials saved"'
  ssh-copy-id administrator@192.168.131.9

  # configure the necessary port-forwarding
  if ! dpkg -s iptables-persistent &>/dev/null;
  then
    # install iptables-persistent non-interactively; we'll need it later
    echo iptables-persistent iptables-persistent/autosave_v4 boolean true | sudo debconf-set-selections
    echo iptables-persistent iptables-persistent/autosave_v6 boolean true | sudo debconf-set-selections
    sudo apt-get -y install iptables-persistent
  fi
  # enable forwarding in sysctl.conf
  sudo sed -i 's/^#net.ipv4.ip_forward=.*/net.ipv4.ip_forward=1/g' /etc/sysctl.conf
  sudo sed -i 's/^net.ipv4.ip_forward=0/net.ipv4.ip_forward=1/g' /etc/sysctl.conf
  echo "[INFO] Configuring IP Tables to forward ports 2000, 5000, and 9091 to IndoorNav backpack"
  sudo sysctl net.ipv4.ip_forward=1
  sudo iptables --policy FORWARD ACCEPT
  sudo iptables -t nat -A PREROUTING -p tcp --dport 2000 -j DNAT --to-destination 192.168.131.9:2000
  sudo iptables -t nat -A PREROUTING -p tcp --dport 5000 -j DNAT --to-destination 192.168.131.9:5000
  sudo iptables -t nat -A PREROUTING -p tcp --dport 9091 -j DNAT --to-destination 192.168.131.9:9091
  sudo iptables -t nat -A POSTROUTING -j MASQUERADE
  sudo dpkg-reconfigure iptables-persistent

  echo "IndoorNav configuraion complete"
  echo "If you encounter networking issues, please reboot the PC"
else
  echo -e "\033[0;31mConfigure, connect, and power-on the IndoorNav backpack PC before running this script\033[0m"
fi # RUN_ME
