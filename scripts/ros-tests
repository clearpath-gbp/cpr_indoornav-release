#!/bin/bash

############################################
## Helpers
############################################

# Color definitions
RED='\033[0;31m'
YEL='\033[0;33m'
GRN='\033[0;32m'
BLU='\033[0;34m'
CYA='\033[0;36m'
NC_='\033[0m' # No Color
REDBG='\033[0;41m'

# Pass/Fail for the final report table
FAIL="${REDBG}FAIL${NC_}"
PASS="${GRN}PASS${NC_}"
UNKNOWN="${YEL}Unknown${NC_}"

# Helper functions for logging
log_success() {
  echo -e "${GRN}[ OK ] $@${NC_}"
}
log_important() {
  echo -e "${REDBG}[NOTE] $@${NC_}"
}
log_error() {
  echo -e "${RED}[ERR ] $@${NC_}"
}
log_warn() {
  echo -e "${YEL}[WARN] $@${NC_}"
}
log_info() {
  echo -e "${NC_}[INFO] $@${NC_}"
}
log_debug() {
  echo -e "${CYA}[DBUG] $@${NC_}"
}

check_topic() {
  # use rostopic hz to ensure a topic is publishing at all
  # if there's no data, the "average rate" field is never
  # displayed.
  # Prints $PASS or $FAIL, so capture the output!
  __topic=$1
  hz=$(timeout 3 rostopic hz $__topic 2>/dev/null)
  hz=$(echo "$hz" | grep "average rate:")
  if [ -z "$hz" ];
  then
    echo -e -n "${FAIL}"
  else
    echo -e -n "${PASS}"
  fi
}


############################################
## Make sure indoornav is already running
############################################
log_info "Checking if IndoorNav is running..."
INDOOR_NAV_RUNNING_RESULT=${FAIL}
nodes=$(rosnode list | grep "/mapper/rocksteady/rosapi")
if ! [ -z "$nodes" ];
then
  INDOOR_NAV_RUNNING_RESULT=${PASS}
fi


############################################
## Check that needed ROS topics are
## published by the robot
## TODO: alternate IMU topics?
############################################
log_info "Checking robot sensor topics.  This may take a few seconds..."
FRONT_SCAN_RESULT=$(check_topic "/front/scan")
REAR_SCAN_RESULT=$(check_topic "/rear/scan")
GX5_IMU_RESULT=$(check_topic "/gx5/imu/data")


############################################
## Check that expected ROS topics are
## published by the backpack
## TODO: additional topics?
############################################
if [ "$INDOOR_NAV_RUNNING_RESULT" = "$FAIL" ];
then
  log_error "IndoorNav does not appear to be running. Skipping autonomy topic tests"
  SLAM_COST_RESULT=${UNKNOWN}
  SLAM_MAP_RESULT=${UNKNOWN}
  SLAM_POSE_RESULT=${UNKNOWN}
else
  log_info "Checking autonomy topics.  This may take a few seconds..."
  SLAM_COST_RESULT=$(check_topic "/slam/cost")
  # TODO: this topic never seems to actually publish anything
  # need to talk with Otto about what topic the map should actually be received on
  # since I can't even get it to display in rviz right now
  SLAM_MAP_RESULT=$(check_topic "/slam/map")
  SLAM_POSE_RESULT=$(check_topic "/slam/pose")
fi

# Print the summary
echo
echo "ROS Test Summary"
echo -e "Test                     | Pass/Fail"
echo -e "-------------------------+-------------"
echo -e "IndoorNav Running        | ${INDOOR_NAV_RUNNING_RESULT}"
echo -e "Robot sensor topics...   |"
echo -e "  /front/scan            | ${FRONT_SCAN_RESULT}"
echo -e "  /rear/scan             | ${REAR_SCAN_RESULT}"
echo -e "  /gx5/imu/data          | ${GX5_IMU_RESULT}"
echo -e "Autonomy topics...       |"
echo -e "  /slam/cost             | ${SLAM_COST_RESULT}"
#echo -e "  /slam/map              | ${SLAM_MAP_RESULT}"
echo -e "  /slam/pose             | ${SLAM_POSE_RESULT}"
