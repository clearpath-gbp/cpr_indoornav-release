#!/bin/bash

# Default username & hostname for the Indoornav Backpack
REMOTE_HOST=192.168.131.9
REMOTE_USER=administrator

usage() {
  echo "Usage"
  echo "  network-tests [[username@]ip_addr]"
  exit 0
}

# Argument parsing
if [ "$#" -gt "1" ] || [ "$1" = "-h" ] || [ "$1" = "--help" ];
then
  echo $1
  usage
elif [ "$#" = "1" ];
then
  # user specified a host or username@host string to use
  if [ -z "$(echo $1 | grep '@')" ];
  then
    REMOTE_HOST=$1
  else
    REMOTE_HOST=$(echo "${1#*@}")
    REMOTE_USER=$(echo "${1%@*}")
  fi
fi


############################################
## Helpers
############################################

# Color definitions
RED='\033[0;31m'
YEL='\033[0;33m'
GRN='\033[0;32m'
BLU='\033[0;34m'
CYA='\033[0;36m'
NC_='\033[0m' # No Color
REDBG='\033[0;41m'

# Pass/Fail for the final report table
FAIL=${REDBG}FAIL${NC_}
PASS=${GRN}PASS${NC_}
UNKNOWN=${YEL}Unknown${NC_}

# Helper functions for logging
log_success() {
  echo -e "${GRN}[ OK ] $@${NC_}"
}
log_important() {
  echo -e "${REDBG}[NOTE] $@${NC_}"
}
log_error() {
  echo -e "${RED}[ERR ] $@${NC_}"
}
log_warn() {
  echo -e "${YEL}[WARN] $@${NC_}"
}
log_info() {
  echo -e "${NC_}[INFO] $@${NC_}"
}
log_debug() {
  echo -e "${CYA}[DBUG] $@${NC_}"
}

log_info "Testing IndoorNav Backpack running as $REMOTE_USER@$REMOTE_HOST"

PING_RESULT=${UNKNOWN}
SSH_CREDENTIALS_RESULT=${UNKNOWN}
HOSTS_RESULT=${UNKNOWN}
SSH_HOSTNAME_RESULT=${UNKNOWN}
REMOTE_ROSLAUNCH_RESULT=${UNKNOWN}
IPTABLES_RESULT=${UNKNOWN}
SYSCTL_PORT_FORWARD_RESULT=${UNKNOWN}

############################################
## TEST 1: basic ping test
############################################
log_info "Attempting to ping $REMOTE_HOST..."
if ping -c1 $REMOTE_HOST &>/dev/null;
then
  PING_RESULT=${PASS}
else
  PING_RESULT=${FAIL}
  log_warn "Failed to ping $REMOTE_HOST; some tests will be skipped"
fi


############################################
## TEST 2: check SSH keys
############################################
if [ "$PING_RESULT" = "${PASS}" ];
then
  log_info "Verifying we can SSH in without password..."
  if ssh -o PasswordAuthentication=no ${REMOTE_USER}@${REMOTE_HOST} 'echo' &>/dev/null;
  then
    SSH_CREDENTIALS_RESULT=${PASS}
  fi
fi

############################################
## TEST 3: check hostname is in /etc/hosts
############################################
if [ "$PING_RESULT" = "${PASS}" ];
then
  log_info "Checking that backpack PC exists in /etc/hosts..."
  REMOTE_HOSTNAME=$(ssh ${REMOTE_USER}@${REMOTE_HOST} 'hostname')
  HOSTS_ENTRY=$(cat /etc/hosts | grep -e "^${REMOTE_HOST}\\s\+${REMOTE_HOSTNAME}\\s*$")
  if ! [ -z "$HOSTS_ENTRY" ];
  then
    HOSTS_RESULT=$PASS
  fi
fi

############################################
## TEST 4: ssh in via hostname instead of ip
############################################
if [ "$PING_RESULT" = "${PASS}" ];
then
  log_info "Verifying we can SSH in via hostname instead of IP address..."
  if ! [ -z "$REMOTE_HOSTNAME" ];
  then
    if ssh -o PasswordAuthentication=no ${REMOTE_USER}@${REMOTE_HOSTNAME} 'echo' &>/dev/null;
    then
      SSH_HOSTNAME_RESULT=${PASS}
    fi
  fi
fi

############################################
## TEST 5: Remote roslaunch
############################################
if [ "$PING_RESULT" = "${PASS}" ];
then
  log_info "Attempting simple remote ros launch (this may take up to 10s)..."
  ros_output=$(timeout 10 roslaunch cpr_indoornav_tests remote_rosbag.launch remote_host:=$REMOTE_HOST remote_user:=$REMOTE_USER 2>/dev/null)
  if [ ! -z "$(echo $ros_output | grep -i 'ssh connection created')" ] && [ ! -z "$(echo $ros_output | grep -i 'done launching nodes')" ];
  then
    REMOTE_ROSLAUNCH_RESULT=${PASS}
  fi
fi

############################################
## TEST 6: IP Tables
############################################
log_info "Checking port forwarding with IP Tables..."
if ! [ -z "$(cat /etc/sysctl.conf | grep -e '^net.ipv4.ip_forward=1')" ];
then
  SYSCTL_PORT_FORWARD_RESULT=${PASS}
else
  SYSCTL_PORT_FORWARD_RESULT=${FAIL}
fi
if [ ! -z "$(cat /etc/iptables/rules.v4 | grep -e '^-A PREROUTING .* tcp --dport 2000 -j DNAT --to-destination 192.168.131.9:2000')" ] &&
   [ ! -z "$(cat /etc/iptables/rules.v4 | grep -e '^-A PREROUTING .* tcp --dport 5000 -j DNAT --to-destination 192.168.131.9:5000')" ] &&
   [ ! -z "$(cat /etc/iptables/rules.v4 | grep -e '^-A PREROUTING .* tcp --dport 9091 -j DNAT --to-destination 192.168.131.9:9091')" ] &&
   [ ! -z "$(cat /etc/iptables/rules.v4 | grep -e '^-A POSTROUTING -j MASQUERADE')" ];
then
  IPTABLES_RESULT=${PASS}
else
  IPTABLES_RESULT=${FAIL}
fi

# Print the summary
echo
echo "Network Test Summary"
echo -e "Test                     | Pass/Fail"
echo -e "-------------------------+-------------"
echo -e "Ping IP address          | $PING_RESULT"
echo -e "SSH login via IP address | $SSH_CREDENTIALS_RESULT"
echo -e "SSH login via hostname   | $SSH_HOSTNAME_RESULT"
echo -e "Hostname resolves        | $HOSTS_RESULT"
echo -e "Remote roslaunch         | $REMOTE_ROSLAUNCH_RESULT"
echo -e "Port forwarding          | $SYSCTL_PORT_FORWARD_RESULT"
echo -e "Iptables config          | $IPTABLES_RESULT"
